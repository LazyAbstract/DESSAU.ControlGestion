@model DESSAU.ControlGestion.Web.Models.EvaluacionModels.EvaluationSheetViewModel

@{
    ViewBag.Title = "EvaluationSheet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <h2><i class="fa fa-line-chart" aria-hidden="true"></i> @String.Format("Evaluación de Desempeño {0}", Model.FORM.Fecha.GetValueOrDefault(DateTime.Now.AddMonths(-1)).ToString("MMMM"))</h2>
    </div>
</div>

<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @*<a class="navbar-brand" href="#">Fecha</a>*@
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav"></ul>
            <form class="navbar-form navbar-left" role="search" method="get">
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(x => x.FORM.IdProyecto, new { @class = " control-label" })
                    </div>
                    <div class="col-md-5">
                        @Html.DropDownListFor(x => x.FORM.IdProyecto, Model.Proyectos, "Elija una opción", new { @class = "form-control" })
                    </div>
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(x => x.FORM.IdProyecto)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                    @Html.LabelFor(x => x.FORM.IdCategoria, new { @class = " control-label" })
                    </div>
                    <div class="col-md-5">
                    @Html.DropDownListFor(x => x.FORM.IdCategoria, Model.Categorias, "Elija una opción", new { @class = "form-control" })
                    </div>
                    <div class="col-md-5">
                    @Html.ValidationMessageFor(x => x.FORM.IdCategoria)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(x => x.FORM.Fecha, new { @class = "control-label" })
                    </div>
                    <div class="col-md-5">
                        @Html.TextBoxFor(x => x.FORM.Fecha, "{0:dd/MM/yyyy}", new { @class = "fecha form-control foco" })
                    </div>
                    <div class="col-md-5">
                        @Html.ValidationMessageFor(x => x.FORM.Fecha)
                    </div>
                </div>
                <row>
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-default">Buscar</button>
                    </div>
                </row>

            </form>
        </div>
    </div>
</nav>
@if (Model.PlantillaEvaluacion != null)
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">@Model.PlantillaEvaluacion.Nombre</h3>
                </div>
                <div class="panel-body">
                    <table class="table">
                        <tr>
                            <th>Creado Por:</th>
                            <td>@Model.PlantillaEvaluacion.CreadoPor</td>
                            <th>Fecha Creación</th>
                            <td>@Model.PlantillaEvaluacion.FechaCreacion.ToShortDateString()</td>
                        </tr>
                        <tr>
                            <th colspan="4">Descripción</th>
                        </tr>
                        <tr>
                            <th colspan="4">@Model.PlantillaEvaluacion.Descripcion</th>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    if (Model.UsuarioCategoriaProyectos.Any())
    {
        using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ts-form" }))
        {
            @Html.Hidden("FORM.Fecha", Model.FORM.Fecha)
            @Html.Hidden("FORM.IdCategoria", Model.FORM.IdCategoria)
            <div class="col-md-12">
                <button type="submit" class="btn btn-default">Guardar</button>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <table class="table-striped table">
                        @*<tr>
                            <th></th>
                            @foreach (var tipoPregunta in Model.Preguntas.GroupBy(x => x.TipoPregunta.Nombre).OrderBy(x => x.Key))
                            {
                            <th colspan="@tipoPregunta.Count()">@tipoPregunta.Key</th>
                            }
                            </tr>*@
                        <tr>
                            <th></th>
                            @foreach (var pregunta in Model.Preguntas.OrderBy(x => x.IdTipoPregunta))
                            {
                                <th data-toggle="tooltip" data-placement="top" title=@pregunta.FormulacionPregunta>@pregunta</th>
                            }
                        </tr>
                        @{
                            int i = 0;
                            foreach (var usuarioCategoriaProyecto in Model.UsuarioCategoriaProyectos)
                            {
                                var evaluacionFORM = Model.EvaluacionFORMs.FirstOrDefault(x => x.IdUsuario == usuarioCategoriaProyecto.IdUsuario);
                                @Html.Hidden(String.Format("EvaluacionFORMs[{0}].Fecha", i), Model.FORM.Fecha)
                                @Html.Hidden(String.Format("EvaluacionFORMs[{0}].IdUsuario", i), usuarioCategoriaProyecto.IdUsuario)
                                if (evaluacionFORM != null)
                                {
                                    @Html.Hidden(String.Format("EvaluacionFORMs[{0}].IdEvaluacion", i), evaluacionFORM.IdEvaluacion)
                                }
                                <tr>
                                    <th>
                                        @String.Format("{0}({1})", usuarioCategoriaProyecto.Usuario.NombreCompleto, usuarioCategoriaProyecto.Proyecto.Nombre)
                                    </th>
                                    @{
                                        int j = 0;
                                        foreach (var pregunta in Model.Preguntas.OrderBy(x => x.IdTipoPregunta))
                                        {
                                            int? valor = null;
                                            <td>
                                                @if (evaluacionFORM != null && evaluacionFORM.EvaluacionPreguntaDTOs.Any(x => x.IdPregunta == pregunta.IdPregunta))
                                                {
                                                    var evaluacionPreguntaDTO = evaluacionFORM.EvaluacionPreguntaDTOs.SingleOrDefault(x => x.IdPregunta == pregunta.IdPregunta);
                                                    valor = evaluacionPreguntaDTO.ValorObtenido;
                                                    @Html.Hidden(String.Format("EvaluacionFORMs[{0}].EvaluacionPreguntaDTOs[{1}].IdEvaluacionPregunta", i, j), evaluacionPreguntaDTO.IdEvaluacionPregunta)
                                                }
                                                @Html.Hidden(String.Format("EvaluacionFORMs[{0}].EvaluacionPreguntaDTOs[{1}].IdPregunta", i, j), pregunta.IdPregunta)
                                                @Html.TextBox(String.Format("EvaluacionFORMs[{0}].EvaluacionPreguntaDTOs[{1}].ValorObtenido", i, j), valor.GetValueOrDefault(0))
                                                @Html.ValidationMessage(String.Format("EvaluacionFORMs[{0}].EvaluacionPreguntaDTOs[{1}].ValorObtenido", i, j))
                                            </td>
                                            j++;
                                        }
                                    }
                                </tr>
                                            i++;
                                        }
                        }
                    </table>
                </div>
            </div>
            <div class="col-md-12">
                <button type="submit" class="btn btn-default">Guardar</button>
            </div>
                                                }
                                            }
                                        }
<br />
<br />
<br />
<br />
<br />
<br />
