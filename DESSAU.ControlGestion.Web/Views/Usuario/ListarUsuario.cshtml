@model DESSAU.ControlGestion.Web.Models.UsuarioModels.ListarUsuarioViewModel

@{
    ViewBag.Title = "DESSAU";
}

<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Usuarios</a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav"></ul>
            <form class="navbar-form navbar-left" role="search">
                <div class="form-group">
                    <input type="text" class="form-control" placeholder="Búsqueda amplia" name="filtro" id="input-filtro" value="@Model.filtro">
                </div>
                <button type="submit" class="btn btn-default">Buscar</button>
            </form>
            @Html.ActionLink("Agregar", "CrearEditarUsuario", null, new { @class = "btn btn-primary navbar-btn navbar-right" })
        </div>
    </div>
</nav>

<div class="row">
    <div class="col-md-12">
        @Html.PagedListPager(Model.Usuarios, page => Url.Action("ListarUsuario", new
   {
       pagina = page,
       filtro = Model.filtro
   }))
        @(Html.Grid(Model.Usuarios)
        .Attributes(@class => "table table-striped")
        .Columns(col =>
        {
            col.For(x => x.ApellidoPaterno + ", " + x.Nombre).Named("Nombre Completo");
            col.For(x => x.Correo).Named("Nombre Usuario");
            col.For(x => x.Contacto).Named("Correo");
            col.For(x => x.TipoUsuario.Nombre).Named("Tipo Usuario");
            col.For(x => x.Vigente ? "Vigente" : "No Vigente").Named("Estado");
            col.For(x => Html.ButtonIconActionLink("pencil", "Editar Usuario", "CrearEditarUsuario", null, null, new { IdUsuario = x.IdUsuario }));
            col.For(x => Html.ButtonIconActionLink("off", "Resetear Contraseña", "ResetContrasena", null, null, new { IdUsuario = x.IdUsuario }));
            col.For(x => x.Vigente ? Html.ButtonIconActionLink("remove", "Dar de Baja Usuario", "CambiarEstadoUsuario", null, null, new { IdUsuario = x.IdUsuario })
                : Html.ButtonIconActionLink("ok", "Dar de Alta Usuario", "CambiarEstadoUsuario", null, null, new { IdUsuario = x.IdUsuario }));
        }).Empty("No se han encontrado registros asociados a los filtros seleccionados"))
    </div>
</div>





