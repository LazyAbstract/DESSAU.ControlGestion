@model DESSAU.ControlGestion.Web.Models.NominaModels.VerNominaViewModel

@{
    ViewBag.Title = "DESSAU";
}

<nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Nóminas</a>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav"></ul>
            <form class="navbar-form navbar-left" role="search">
                <div class="form-group">
                    @Html.DropDownListFor(x => x.IdProyecto, Model.Proyectos, "Seleccione un Proyecto", new { @class = "form-control" })
                </div>
                <button type="submit" class="btn btn-default">Buscar</button>
            </form>
        </div>
    </div>
</nav>

<div class="row">
    <div class="col-md-12">
        @Html.PagedListPager(Model.Nominas, page => Url.Action("VerNomina", new
   {
       pagina = page,
       IdProyecto = Model.IdProyecto
   }))
        @(Html.Grid(Model.Nominas)
        .Attributes(@class => "table table-striped")
        .Columns(col =>
        {
            col.For(x => x.ApellidoPaterno + ", " + x.Nombre).Named("Nombre Completo");
            col.For(x => x.Categoria).Named("Categoría");
            col.For(x => x.ODS).Named("Orden Servicio");
            col.For(x => @String.Format("{0:P0}", x.IndiceDesviacion)).Named("Índice Desviación");
            col.For(x => x.CantidadPendientesPlanificacion == 0 ? Html.Raw("<i class='fa fa-check-square' aria-hidden='true'></i>")
                : Html.Raw("<i class='fa fa-exclamation-triangle' aria-hidden='true'></i>"))
                .Named("Estado Planificación").Encode(false);
            col.For(x => x.CantidadPendientesDeclaracion == 0 ? Html.Raw("<i class='fa fa-check-square' aria-hidden='true'></i>")
                : Html.Raw("<i class='fa fa-exclamation-triangle' aria-hidden='true'></i>"))
                .Named("Estado Declaración").Encode(false);
            col.For(x => Html.ButtonIconActionLink("transfer", "Re Asignar a ODS", "CrearEditarNomina", null, null, new { IdUsuario = x.IdUsuario }));
        }).Empty("No se han encontrado profesionales asignados a este proyecto"))
    </div>
    <hr />
    @Html.ActionLink("Exportar Nómina", "ExportarNominaExcel", new { IdProyecto = Model.IdProyecto }, new { @class = "btn btn-success" })
</div>



@*@if (User.IsInRole("Admin"))
{
    <hr />
    <h3>Profesionales no Asignados</h3>
    <div class="row">
        <div class="col-md-12">
            @(Html.Grid(Model.NominaNoAsignados)
        .Attributes(@class => "table table-striped")
        .Columns(col =>
        {
            col.For(x => x.ApellidoNombre).Named("Nombre Completo");
            col.For(x => x.TipoUsuario.Nombre).Named("Tipo de Usuario");
            col.For(x => Html.ButtonIconActionLink("log-in", "Asignar a ODS", "CrearEditarNomina", null, null, new { IdUsuario = x.IdUsuario }));
        }).Empty("No se han encontrado profesionales asignados a este proyecto"))
        </div>
    </div>
}*@
